import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
df=pd.read_csv("StudentsPerformance.csv")

print(df.head(10))
print(df.shape)

print(df.dtypes.value_counts())

df.info()

print(df.describe())

# Handle the Missing Value
print(df.isnull().sum())

# Making list of columns having missing value
data = df
coln=[]
miss=[]
coln.extend(data.columns)
for i in coln:
   t=data[i].isnull
   if t!=0:
       miss.append(i)
   else:
       continue
print(miss)

pd.options.mode.chained_assignment=None
for j in miss:
   q=data[j].dtypes
   if(q=='int64'or q=='float64'):
       f=data[j]
       for k in range (data.shape[0]):
           if(f[k]<0 or f[k]>100):
               f[k]=(np.nan)
           else:
               data.fillna(method='bfill')

print(data.head(20))

data['math score'].plot(kind='box')
plt.show()

data['reading score'].plot(kind='box')
plt.show()

data['writing score'].plot(kind='box')
plt.show()

print(data.head(10))

# Outliers Removal
q1=data['math score'].quantile(0.25)
q3=data['math score'].quantile(0.75)
iqr=q3-q1
lowerlimit=q1-1.5*iqr
upperlimit =q3 + 1.5*iqr
print("Q1",q1, "\nQ3:" , q3,"\nIQR:",iqr, "\nLOWER LIMIT",lowerlimit,"\nUPPER LIMIT",upperlimit)

print(data[(data['math score']<lowerlimit)|(data['math score']>upperlimit)])
print(data[(data['math score']<lowerlimit)&(data['math score']>upperlimit)])

data['math score'].plot(kind='box')
plt.show()

# Z-Score
new_data=data
from scipy import stats
columns=['math score','reading score','writing score']
new_data[columns]= stats.zscore(new_data[columns])
print(new_data)

# Min-Max Scaling
new_data1=data
from sklearn.preprocessing import MinMaxScaler
scaler = MinMaxScaler()
col=['math score','reading score','writing score']
scaler.fit(new_data1[col])
new_data1[col]=scaler.transform(new_data1[col])
print(new_data1)
